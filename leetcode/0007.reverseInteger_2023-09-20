Question:
Given a signed 32-bit integer x, return x with its digits reversed. 
If reversing x causes the value to go outside the signed 32-bit integer range [-231, 231 - 1], then return 0.
Assume the environment does not allow you to store 64-bit integers (signed or unsigned).

Example 1:
Input: x = 123
Output: 321

Example 2:
Input: x = -123
Output: -321

Example 3:
Input: x = 120
Output: 21
 

Constraints:
-231 <= x <= 231 - 1


*************************************************************************************************************************
Attempt #1 (2023-09-20)- Javascript
(Runtime: 58ms, beats 76.14% users. Memory: 43.7Mb, beats 75.52% users)
var reverse = function(x) {
    let INT_MAX = 2**31 - 1;
    let INT_MIN = -(2**31);

    if (x > INT_MAX || x < INT_MIN) {
        return 0;
    }

    let str = x.toString();
    let negative = false;

    if (str[0] === '-') {
        negative = true;
        str = str.substring(1, str.length);
    }

    let reversedStr = str.split('').reverse().join('');

    let reversedInt = parseInt(reversedStr);

    if (negative) {
        reversedInt = -reversedInt;
    }

    if (reversedInt > INT_MAX || reversedInt < INT_MIN) {
        return 0;
    }

    return reversedInt;
};
